package inventory.system;
import inventory.system.InventoryDBManager;
import inventory.system.InventorySystem;
import inventory.system.Item;
import inventory.system.Security;
import java.util.Map;
import javax.swing.JOptionPane;

public class maingui extends javax.swing.JFrame {

    private Map<String, Security> userMap = InventorySystem.getSecurityMap();
    private Map<String, Item> inventoryMap = InventorySystem.getHashMap();

    public maingui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list2 = new java.awt.List();
        sidepanel = new javax.swing.JPanel();
        Loginsidepanel = new javax.swing.JPanel();
        registersidepanelbutton = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        Registrationsidepanel = new javax.swing.JPanel();
        loginsidepanelbutton1 = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        Homesidepanel = new javax.swing.JPanel();
        Logouthomesidepanelbutton = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        optionssidepanel = new javax.swing.JPanel();
        Logoutoptionssidepanelbutton = new javax.swing.JToggleButton();
        additemoptionssidepanelbutton = new javax.swing.JToggleButton();
        removeitemoptionssidepanelbutton = new javax.swing.JToggleButton();
        inventoryoptionssidepanelbutton = new javax.swing.JToggleButton();
        orderrequestoptionssidepanelbutton = new javax.swing.JToggleButton();
        homeoptionssidepanelbutton = new javax.swing.JToggleButton();
        jLabel36 = new javax.swing.JLabel();
        inventorysidepanel = new javax.swing.JPanel();
        additeminventorysidepanelbutton = new javax.swing.JToggleButton();
        removeiteminventorysidepanelbutton = new javax.swing.JToggleButton();
        orderrequestinventorysidepanelbutton = new javax.swing.JToggleButton();
        Logoutinventorysidepanelbutton1 = new javax.swing.JToggleButton();
        homeinventorysidepanelbutton = new javax.swing.JToggleButton();
        jLabel38 = new javax.swing.JLabel();
        ordersidepanel = new javax.swing.JPanel();
        homeordersidepanelbutton = new javax.swing.JToggleButton();
        Logoutordersidepanelbutton = new javax.swing.JToggleButton();
        additemordersidepanelbutton = new javax.swing.JToggleButton();
        removeitemordersidepanelbutton = new javax.swing.JToggleButton();
        inventoryordersidepanelbutton = new javax.swing.JToggleButton();
        jLabel39 = new javax.swing.JLabel();
        Parent = new javax.swing.JPanel();
        Loginpage = new javax.swing.JPanel();
        LOGINUSERIDTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        LOGINPASSWORDJPasswordField = new javax.swing.JPasswordField();
        loginloginpagebutton = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        registrationpage = new javax.swing.JPanel();
        RegisterNameTextField = new javax.swing.JTextField();
        RegisterUIDTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        RegisterPasswordField = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        RegisterPasswordConfirmField = new javax.swing.JPasswordField();
        registerregistrationpagebutton = new javax.swing.JToggleButton();
        jLabel43 = new javax.swing.JLabel();
        homepage = new javax.swing.JPanel();
        removeitemhomepagebutton = new javax.swing.JToggleButton();
        inventorystatushomepagebutton = new javax.swing.JToggleButton();
        additemhomepagebutton = new javax.swing.JToggleButton();
        orderrequesthomepagebutton = new javax.swing.JToggleButton();
        jLabel27 = new javax.swing.JLabel();
        addoptionspage = new javax.swing.JPanel();
        addqtyaddoptionspage = new javax.swing.JToggleButton();
        additemaddoptionspage = new javax.swing.JToggleButton();
        jLabel28 = new javax.swing.JLabel();
        addqtypage = new javax.swing.JPanel();
        ITEMLISTField = new java.awt.List();
        ITEMQTYSpinner = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ITEMADDQTYButton = new javax.swing.JToggleButton();
        ITEMCODEBox = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        additempage = new javax.swing.JPanel();
        ITEMCODETextField = new javax.swing.JTextField();
        ITEMNAMETextField = new javax.swing.JTextField();
        SUPPLIERTextField = new javax.swing.JTextField();
        MOQSpinner = new javax.swing.JSpinner();
        PRICETextField = new javax.swing.JTextField();
        MINIMUMSpinner = new javax.swing.JSpinner();
        CREATENEWITEMButton = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        removeoptionspage = new javax.swing.JPanel();
        removeqtyremoveoptionspagebutton = new javax.swing.JToggleButton();
        removeitemremoveoptionspagebutton = new javax.swing.JToggleButton();
        jLabel29 = new javax.swing.JLabel();
        removeqtypage = new javax.swing.JPanel();
        removeqtyspinner = new javax.swing.JSpinner();
        removeqtylist = new java.awt.List();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        removeqtybutton = new javax.swing.JToggleButton();
        removeqtycombo = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        removeitempage = new javax.swing.JPanel();
        removeitemlist = new java.awt.List();
        jLabel22 = new javax.swing.JLabel();
        removeitembutton = new javax.swing.JToggleButton();
        removeitemcombo = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        inventorypage = new javax.swing.JPanel();
        inventorylist = new java.awt.List();
        inventorydocbutton = new javax.swing.JToggleButton();
        totalitemstext = new javax.swing.JTextField();
        totalqtytext = new javax.swing.JTextField();
        belowminimumtext = new javax.swing.JTextField();
        outofstocktext = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        orderpage = new javax.swing.JPanel();
<<<<<<< HEAD
        orderlist = new java.awt.List();
        orderbutton = new javax.swing.JToggleButton();
=======
        ORDERREQUESTList = new java.awt.List();
        jToggleButton7 = new javax.swing.JToggleButton();
>>>>>>> b250dd633727916a365b3fe1e1f89e24dd96dfad
        jLabel31 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(640, 480));
        getContentPane().setLayout(null);

        sidepanel.setLayout(new java.awt.CardLayout());

        Loginsidepanel.setBackground(new java.awt.Color(102, 255, 255));
        Loginsidepanel.setLayout(null);

        registersidepanelbutton.setText("Register");
        registersidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registersidepanelbuttonActionPerformed(evt);
            }
        });
        Loginsidepanel.add(registersidepanelbutton);
        registersidepanelbutton.setBounds(23, 187, 112, 23);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NEW USER?");
        Loginsidepanel.add(jLabel1);
        jLabel1.setBounds(40, 130, 80, 16);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CLICK REGISTER TO SIGN UP");
        Loginsidepanel.add(jLabel2);
        jLabel2.setBounds(6, 153, 151, 16);

        jLabel41.setIcon(new javax.swing.ImageIcon("C:\\Users\\kanth\\Downloads\\Timber.jpg")); // NOI18N
        Loginsidepanel.add(jLabel41);
        jLabel41.setBounds(0, 0, 160, 400);

        sidepanel.add(Loginsidepanel, "card2");

        Registrationsidepanel.setBackground(new java.awt.Color(102, 255, 255));
        Registrationsidepanel.setLayout(null);

        loginsidepanelbutton1.setBackground(new java.awt.Color(102, 255, 102));
        loginsidepanelbutton1.setText("Login");
        loginsidepanelbutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginsidepanelbutton1ActionPerformed(evt);
            }
        });
        Registrationsidepanel.add(loginsidepanelbutton1);
        loginsidepanelbutton1.setBounds(24, 188, 112, 23);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ALREADY REGISTERED");
        Registrationsidepanel.add(jLabel3);
        jLabel3.setBounds(20, 130, 130, 16);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Click on login");
        Registrationsidepanel.add(jLabel4);
        jLabel4.setBounds(44, 154, 73, 16);

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Timber.jpg"))); // NOI18N
        Registrationsidepanel.add(jLabel40);
        jLabel40.setBounds(0, 0, 160, 400);

        sidepanel.add(Registrationsidepanel, "card3");

        Homesidepanel.setBackground(new java.awt.Color(255, 255, 255));
        Homesidepanel.setLayout(null);

        Logouthomesidepanelbutton.setBackground(new java.awt.Color(255, 51, 51));
        Logouthomesidepanelbutton.setForeground(new java.awt.Color(255, 255, 255));
        Logouthomesidepanelbutton.setText("LOG OUT");
        Logouthomesidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogouthomesidepanelbuttonActionPerformed(evt);
            }
        });
        Homesidepanel.add(Logouthomesidepanelbutton);
        Logouthomesidepanelbutton.setBounds(16, 362, 112, 23);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("WELCOME BACK!!");
        Homesidepanel.add(jLabel5);
        jLabel5.setBounds(24, 68, 120, 20);

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Rainbow Blue.jpg"))); // NOI18N
        Homesidepanel.add(jLabel37);
        jLabel37.setBounds(0, 0, 160, 400);

        sidepanel.add(Homesidepanel, "card4");

        optionssidepanel.setLayout(null);

        Logoutoptionssidepanelbutton.setBackground(new java.awt.Color(255, 51, 51));
        Logoutoptionssidepanelbutton.setForeground(new java.awt.Color(255, 255, 255));
        Logoutoptionssidepanelbutton.setText("LOG OUT");
        Logoutoptionssidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutoptionssidepanelbuttonActionPerformed(evt);
            }
        });
        optionssidepanel.add(Logoutoptionssidepanelbutton);
        Logoutoptionssidepanelbutton.setBounds(24, 354, 112, 23);

        additemoptionssidepanelbutton.setText("ADD ITEM");
        additemoptionssidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemoptionssidepanelbuttonActionPerformed(evt);
            }
        });
        optionssidepanel.add(additemoptionssidepanelbutton);
        additemoptionssidepanelbutton.setBounds(6, 104, 148, 23);

        removeitemoptionssidepanelbutton.setText("REMOVE ITEM");
        removeitemoptionssidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeitemoptionssidepanelbuttonActionPerformed(evt);
            }
        });
        optionssidepanel.add(removeitemoptionssidepanelbutton);
        removeitemoptionssidepanelbutton.setBounds(6, 145, 148, 23);

        inventoryoptionssidepanelbutton.setText("INVENTORY STATUS");
        inventoryoptionssidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryoptionssidepanelbuttonActionPerformed(evt);
            }
        });
        optionssidepanel.add(inventoryoptionssidepanelbutton);
        inventoryoptionssidepanelbutton.setBounds(6, 186, 148, 23);

        orderrequestoptionssidepanelbutton.setText("ORDER REQUEST");
        orderrequestoptionssidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderrequestoptionssidepanelbuttonActionPerformed(evt);
            }
        });
        optionssidepanel.add(orderrequestoptionssidepanelbutton);
        orderrequestoptionssidepanelbutton.setBounds(6, 227, 148, 23);

        homeoptionssidepanelbutton.setText("HOME");
        homeoptionssidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeoptionssidepanelbuttonActionPerformed(evt);
            }
        });
        optionssidepanel.add(homeoptionssidepanelbutton);
        homeoptionssidepanelbutton.setBounds(14, 15, 65, 23);

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Rainbow Blue.jpg"))); // NOI18N
        jLabel36.setMaximumSize(new java.awt.Dimension(1920, 240));
        jLabel36.setMinimumSize(new java.awt.Dimension(1920, 240));
        jLabel36.setPreferredSize(new java.awt.Dimension(240, 240));
        optionssidepanel.add(jLabel36);
        jLabel36.setBounds(0, 0, 160, 400);

        sidepanel.add(optionssidepanel, "card5");

        inventorysidepanel.setLayout(null);

        additeminventorysidepanelbutton.setText("ADD ITEM");
        additeminventorysidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additeminventorysidepanelbuttonActionPerformed(evt);
            }
        });
        inventorysidepanel.add(additeminventorysidepanelbutton);
        additeminventorysidepanelbutton.setBounds(6, 129, 148, 23);

        removeiteminventorysidepanelbutton.setText("REMOVE ITEM");
        removeiteminventorysidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeiteminventorysidepanelbuttonActionPerformed(evt);
            }
        });
        inventorysidepanel.add(removeiteminventorysidepanelbutton);
        removeiteminventorysidepanelbutton.setBounds(6, 170, 148, 23);

        orderrequestinventorysidepanelbutton.setText("ORDER REQUEST");
        orderrequestinventorysidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderrequestinventorysidepanelbuttonActionPerformed(evt);
            }
        });
        inventorysidepanel.add(orderrequestinventorysidepanelbutton);
        orderrequestinventorysidepanelbutton.setBounds(6, 211, 148, 23);

        Logoutinventorysidepanelbutton1.setBackground(new java.awt.Color(255, 51, 51));
        Logoutinventorysidepanelbutton1.setForeground(new java.awt.Color(255, 255, 255));
        Logoutinventorysidepanelbutton1.setText("LOG OUT");
        Logoutinventorysidepanelbutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Logoutinventorysidepanelbutton1ActionPerformed(evt);
            }
        });
        inventorysidepanel.add(Logoutinventorysidepanelbutton1);
        Logoutinventorysidepanelbutton1.setBounds(24, 356, 112, 23);

        homeinventorysidepanelbutton.setText("HOME");
        homeinventorysidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeinventorysidepanelbuttonActionPerformed(evt);
            }
        });
        inventorysidepanel.add(homeinventorysidepanelbutton);
        homeinventorysidepanelbutton.setBounds(14, 18, 65, 23);

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Rainbow Blue.jpg"))); // NOI18N
        jLabel38.setText("jLabel38");
        inventorysidepanel.add(jLabel38);
        jLabel38.setBounds(0, 0, 160, 400);

        sidepanel.add(inventorysidepanel, "card6");

        ordersidepanel.setLayout(null);

        homeordersidepanelbutton.setText("HOME");
        homeordersidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeordersidepanelbuttonActionPerformed(evt);
            }
        });
        ordersidepanel.add(homeordersidepanelbutton);
        homeordersidepanelbutton.setBounds(16, 19, 65, 23);

        Logoutordersidepanelbutton.setBackground(new java.awt.Color(255, 51, 51));
        Logoutordersidepanelbutton.setForeground(new java.awt.Color(255, 255, 255));
        Logoutordersidepanelbutton.setText("LOG OUT");
        Logoutordersidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutordersidepanelbuttonActionPerformed(evt);
            }
        });
        ordersidepanel.add(Logoutordersidepanelbutton);
        Logoutordersidepanelbutton.setBounds(24, 346, 112, 23);

        additemordersidepanelbutton.setText("ADD ITEM");
        additemordersidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemordersidepanelbuttonActionPerformed(evt);
            }
        });
        ordersidepanel.add(additemordersidepanelbutton);
        additemordersidepanelbutton.setBounds(6, 113, 148, 23);

        removeitemordersidepanelbutton.setText("REMOVE ITEM");
        removeitemordersidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeitemordersidepanelbuttonActionPerformed(evt);
            }
        });
        ordersidepanel.add(removeitemordersidepanelbutton);
        removeitemordersidepanelbutton.setBounds(6, 154, 148, 23);

        inventoryordersidepanelbutton.setText("INVENTORY STATUS");
        inventoryordersidepanelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryordersidepanelbuttonActionPerformed(evt);
            }
        });
        ordersidepanel.add(inventoryordersidepanelbutton);
        inventoryordersidepanelbutton.setBounds(6, 195, 148, 23);

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Rainbow Blue.jpg"))); // NOI18N
        ordersidepanel.add(jLabel39);
        jLabel39.setBounds(0, 0, 160, 400);

        sidepanel.add(ordersidepanel, "card7");

        getContentPane().add(sidepanel);
        sidepanel.setBounds(0, 0, 160, 400);

        Parent.setLayout(new java.awt.CardLayout());

        Loginpage.setLayout(null);
        Loginpage.add(LOGINUSERIDTextField);
        LOGINUSERIDTextField.setBounds(124, 122, 181, 22);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("USER ID");
        Loginpage.add(jLabel6);
        jLabel6.setBounds(172, 100, 70, 20);
        Loginpage.add(LOGINPASSWORDJPasswordField);
        LOGINPASSWORDJPasswordField.setBounds(124, 191, 181, 22);

        loginloginpagebutton.setBackground(new java.awt.Color(102, 255, 102));
        loginloginpagebutton.setText("Login");
        loginloginpagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginloginpagebuttonActionPerformed(evt);
            }
        });
        Loginpage.add(loginloginpagebutton);
        loginloginpagebutton.setBounds(159, 231, 112, 23);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("PASSWORD");
        Loginpage.add(jLabel7);
        jLabel7.setBounds(170, 160, 90, 20);

        jLabel42.setIcon(new javax.swing.ImageIcon("C:\\Users\\kanth\\Downloads\\Celestial.jpg")); // NOI18N
        Loginpage.add(jLabel42);
        jLabel42.setBounds(0, 0, 480, 400);

        Parent.add(Loginpage, "card2");

        registrationpage.setLayout(null);
        registrationpage.add(RegisterNameTextField);
        RegisterNameTextField.setBounds(140, 87, 194, 22);
        registrationpage.add(RegisterUIDTextField);
        RegisterUIDTextField.setBounds(140, 149, 194, 22);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("NAME");
        registrationpage.add(jLabel8);
        jLabel8.setBounds(200, 60, 80, 20);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("USER ID");
        registrationpage.add(jLabel9);
        jLabel9.setBounds(210, 120, 52, 20);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("PASSWORD");
        registrationpage.add(jLabel10);
        jLabel10.setBounds(200, 180, 79, 20);
        registrationpage.add(RegisterPasswordField);
        RegisterPasswordField.setBounds(140, 211, 194, 22);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("RE-TYPE PASSWORD");
        registrationpage.add(jLabel11);
        jLabel11.setBounds(170, 240, 138, 20);
        registrationpage.add(RegisterPasswordConfirmField);
        RegisterPasswordConfirmField.setBounds(140, 273, 194, 22);

        registerregistrationpagebutton.setText("Register");
        registerregistrationpagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerregistrationpagebuttonActionPerformed(evt);
            }
        });
        registrationpage.add(registerregistrationpagebutton);
        registerregistrationpagebutton.setBounds(190, 321, 112, 23);

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Celestial.jpg"))); // NOI18N
        registrationpage.add(jLabel43);
        jLabel43.setBounds(0, 0, 480, 400);

        Parent.add(registrationpage, "card3");

        homepage.setLayout(null);

        removeitemhomepagebutton.setText("REMOVE ITEM");
        removeitemhomepagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeitemhomepagebuttonActionPerformed(evt);
            }
        });
        homepage.add(removeitemhomepagebutton);
        removeitemhomepagebutton.setBounds(258, 58, 177, 125);

        inventorystatushomepagebutton.setText("INVENTORY STATUS");
        inventorystatushomepagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventorystatushomepagebuttonActionPerformed(evt);
            }
        });
        homepage.add(inventorystatushomepagebutton);
        inventorystatushomepagebutton.setBounds(53, 209, 177, 125);

        additemhomepagebutton.setText("ADD ITEM");
        additemhomepagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemhomepagebuttonActionPerformed(evt);
            }
        });
        homepage.add(additemhomepagebutton);
        additemhomepagebutton.setBounds(53, 58, 177, 125);

        orderrequesthomepagebutton.setText("ORDER REQUEST");
        orderrequesthomepagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderrequesthomepagebuttonActionPerformed(evt);
            }
        });
        homepage.add(orderrequesthomepagebutton);
        orderrequesthomepagebutton.setBounds(258, 209, 177, 125);

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        homepage.add(jLabel27);
        jLabel27.setBounds(0, 0, 480, 400);

        Parent.add(homepage, "card4");

        addoptionspage.setLayout(null);

        addqtyaddoptionspage.setText("ADD QUANTITY");
        addqtyaddoptionspage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addqtyaddoptionspageActionPerformed(evt);
            }
        });
        addoptionspage.add(addqtyaddoptionspage);
        addqtyaddoptionspage.setBounds(60, 141, 170, 110);

        additemaddoptionspage.setText("ADD NEW ITEM");
        additemaddoptionspage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemaddoptionspageActionPerformed(evt);
            }
        });
        addoptionspage.add(additemaddoptionspage);
        additemaddoptionspage.setBounds(248, 141, 170, 110);

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        addoptionspage.add(jLabel28);
        jLabel28.setBounds(0, 0, 480, 400);

        Parent.add(addoptionspage, "card5");

        addqtypage.setLayout(null);
        addqtypage.add(ITEMLISTField);
        ITEMLISTField.setBounds(39, 50, 400, 239);
        addqtypage.add(ITEMQTYSpinner);
        ITEMQTYSpinner.setBounds(350, 310, 64, 22);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("ITEM CODE");
        addqtypage.add(jLabel12);
        jLabel12.setBounds(40, 310, 62, 16);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("QUANTITY");
        addqtypage.add(jLabel13);
        jLabel13.setBounds(270, 310, 80, 16);

        ITEMADDQTYButton.setText("ADD QUANTITY");
        ITEMADDQTYButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ITEMADDQTYButtonActionPerformed(evt);
            }
        });
        addqtypage.add(ITEMADDQTYButton);
        ITEMADDQTYButton.setBounds(154, 350, 115, 23);

        ITEMCODEBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addqtypage.add(ITEMCODEBox);
        ITEMCODEBox.setBounds(120, 310, 88, 22);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        addqtypage.add(jLabel33);
        jLabel33.setBounds(0, 0, 480, 400);

        Parent.add(addqtypage, "card6");

        additempage.setLayout(null);
        additempage.add(ITEMCODETextField);
        ITEMCODETextField.setBounds(302, 56, 108, 22);
        additempage.add(ITEMNAMETextField);
        ITEMNAMETextField.setBounds(302, 90, 108, 22);
        additempage.add(SUPPLIERTextField);
        SUPPLIERTextField.setBounds(302, 130, 108, 22);
        additempage.add(MOQSpinner);
        MOQSpinner.setBounds(346, 170, 64, 22);

        PRICETextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        PRICETextField.setText("0.00");
        additempage.add(PRICETextField);
        PRICETextField.setBounds(302, 210, 108, 22);
        additempage.add(MINIMUMSpinner);
        MINIMUMSpinner.setBounds(346, 250, 64, 22);

        CREATENEWITEMButton.setText("CREATE");
        CREATENEWITEMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CREATENEWITEMButtonActionPerformed(evt);
            }
        });
        additempage.add(CREATENEWITEMButton);
        CREATENEWITEMButton.setBounds(86, 341, 80, 23);

        jToggleButton3.setText("REFRESH");
        additempage.add(jToggleButton3);
        jToggleButton3.setBounds(302, 341, 90, 23);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("ITEM CODE");
        additempage.add(jLabel14);
        jLabel14.setBounds(67, 59, 70, 16);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("ITEM NAME");
        additempage.add(jLabel15);
        jLabel15.setBounds(67, 93, 65, 16);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("SUPPLIER");
        additempage.add(jLabel16);
        jLabel16.setBounds(67, 133, 54, 16);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("MINIMUM ORDER QUANTITY");
        additempage.add(jLabel17);
        jLabel17.setBounds(67, 173, 165, 16);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("PRICE");
        additempage.add(jLabel18);
        jLabel18.setBounds(67, 213, 32, 16);

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("MINIMUM QUANTITY");
        additempage.add(jLabel19);
        jLabel19.setBounds(67, 253, 122, 16);

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        additempage.add(jLabel34);
        jLabel34.setBounds(0, 0, 480, 400);

        Parent.add(additempage, "card7");

        removeoptionspage.setLayout(null);

        removeqtyremoveoptionspagebutton.setText("REMOVE QUANTITY");
        removeqtyremoveoptionspagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeqtyremoveoptionspagebuttonActionPerformed(evt);
            }
        });
        removeoptionspage.add(removeqtyremoveoptionspagebutton);
        removeqtyremoveoptionspagebutton.setBounds(67, 141, 170, 110);

        removeitemremoveoptionspagebutton.setText("REMOVE ITEM");
        removeitemremoveoptionspagebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeitemremoveoptionspagebuttonActionPerformed(evt);
            }
        });
        removeoptionspage.add(removeitemremoveoptionspagebutton);
        removeitemremoveoptionspagebutton.setBounds(255, 141, 170, 110);

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        removeoptionspage.add(jLabel29);
        jLabel29.setBounds(0, 0, 480, 400);

        Parent.add(removeoptionspage, "card8");

        removeqtypage.setLayout(null);
        removeqtypage.add(removeqtyspinner);
        removeqtyspinner.setBounds(376, 305, 64, 22);
        removeqtypage.add(removeqtylist);
        removeqtylist.setBounds(40, 38, 400, 239);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("ITEM CODE");
        removeqtypage.add(jLabel20);
        jLabel20.setBounds(40, 308, 62, 16);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("QUANTITY");
        removeqtypage.add(jLabel21);
        jLabel21.setBounds(284, 308, 70, 16);

        removeqtybutton.setText("REMOVE QUANTITY");
        removeqtybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeqtybuttonActionPerformed(evt);
            }
        });
        removeqtypage.add(removeqtybutton);
        removeqtybutton.setBounds(170, 345, 170, 23);

        removeqtycombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        removeqtypage.add(removeqtycombo);
        removeqtycombo.setBounds(119, 305, 95, 22);

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        removeqtypage.add(jLabel35);
        jLabel35.setBounds(0, 0, 480, 400);

        Parent.add(removeqtypage, "card9");

        removeitempage.setLayout(null);
        removeitempage.add(removeitemlist);
        removeitemlist.setBounds(40, 38, 400, 239);

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("ITEM CODE");
        removeitempage.add(jLabel22);
        jLabel22.setBounds(111, 303, 70, 16);

        removeitembutton.setText("REMOVE ITEM");
        removeitembutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeitembuttonActionPerformed(evt);
            }
        });
        removeitempage.add(removeitembutton);
        removeitembutton.setBounds(170, 340, 140, 23);

        removeitemcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        removeitempage.add(removeitemcombo);
        removeitemcombo.setBounds(218, 300, 120, 22);

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        removeitempage.add(jLabel32);
        jLabel32.setBounds(0, 0, 480, 400);

        Parent.add(removeitempage, "card10");

        inventorypage.setLayout(null);
        inventorypage.add(inventorylist);
        inventorylist.setBounds(55, 142, 395, 183);

        inventorydocbutton.setText("GENERATE INVENTORY STATUS DOCUMENT");
        inventorydocbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventorydocbuttonActionPerformed(evt);
            }
        });
        inventorypage.add(inventorydocbutton);
        inventorydocbutton.setBounds(60, 350, 340, 23);
        inventorypage.add(totalitemstext);
        totalitemstext.setBounds(350, 20, 64, 22);
        inventorypage.add(totalqtytext);
        totalqtytext.setBounds(350, 50, 64, 22);
        inventorypage.add(belowminimumtext);
        belowminimumtext.setBounds(350, 80, 64, 22);
        inventorypage.add(outofstocktext);
        outofstocktext.setBounds(350, 110, 64, 22);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("TOTAL ITEMS");
        inventorypage.add(jLabel23);
        jLabel23.setBounds(31, 23, 90, 16);

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("TOTAL QUANTITY");
        inventorypage.add(jLabel24);
        jLabel24.setBounds(31, 51, 100, 16);

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("BELOW MINIMUM STOCK");
        inventorypage.add(jLabel25);
        jLabel25.setBounds(31, 79, 144, 16);

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("OUT OF STOCK");
        inventorypage.add(jLabel26);
        jLabel26.setBounds(31, 107, 84, 16);

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        inventorypage.add(jLabel30);
        jLabel30.setBounds(0, 0, 480, 400);

        Parent.add(inventorypage, "card11");

        orderpage.setLayout(null);
<<<<<<< HEAD
        orderpage.add(orderlist);
        orderlist.setBounds(45, 36, 386, 245);
=======
        orderpage.add(ORDERREQUESTList);
        ORDERREQUESTList.setBounds(45, 36, 386, 245);
>>>>>>> b250dd633727916a365b3fe1e1f89e24dd96dfad

        orderbutton.setText("GENERATE ORDER REQUEST DOCUMENT");
        orderbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderbuttonActionPerformed(evt);
            }
        });
        orderpage.add(orderbutton);
        orderbutton.setBounds(70, 320, 330, 23);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/system/Sublime Vivid.jpg"))); // NOI18N
        orderpage.add(jLabel31);
        jLabel31.setBounds(0, 0, 480, 400);

        Parent.add(orderpage, "card12");

        getContentPane().add(Parent);
        Parent.setBounds(160, 0, 480, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registersidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registersidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Registrationsidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(registrationpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_registersidepanelbuttonActionPerformed

    private void loginsidepanelbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginsidepanelbutton1ActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Loginsidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(Loginpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_loginsidepanelbutton1ActionPerformed

    private void LogouthomesidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogouthomesidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Loginsidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(Loginpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_LogouthomesidepanelbuttonActionPerformed

    private void homeoptionssidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeoptionssidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_homeoptionssidepanelbuttonActionPerformed

    private void additemoptionssidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemoptionssidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(addoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_additemoptionssidepanelbuttonActionPerformed

    private void removeitemoptionssidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeitemoptionssidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(removeoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_removeitemoptionssidepanelbuttonActionPerformed

    private void inventoryoptionssidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryoptionssidepanelbuttonActionPerformed
        // TODO add your handling code here:
         InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
      
        inventorylist.removeAll();//whenever there is a new run of the text field it will empty.
        inventorylist.add(String.format("%-10s | %-12s | %-5s | %-5s | %-8s | %-8s%n","Item Code", "Item Name", "Qty", "MOQ", "Stk Min", "Price"));
        inventorylist.add("-----------------------------------------------------------------------------");
        
         int totalItems = 0;
        int totalQuantity = 0;
        int belowMinimumStock = 0;
        int outOfStock = 0;
        
        for(Map.Entry<String, Item> entry: inventoryMap.entrySet())
        {
            String key = entry.getKey();
            Item item = entry.getValue();
            
            String line = String.format("%-10s | %-12s | %-5d | %-5d | %-8d | %-8.2f%n", item.itemCode, item.itemName, item.qty, item.moq, item.stkMin, item.price);
            inventorylist.add(line);
            
            totalItems++;
            totalQuantity += item.qty;
            
            // Calculate items below minimum stock
            if (item.qty > 0 && item.qty < item.stkMin) {
                belowMinimumStock++;
            }
            
            // Calculate items out of stock
            if (item.qty == 0) {
                outOfStock++;
            }
          
        }
        
         totalitemstext.setText(String.valueOf(totalItems));
        totalqtytext.setText(String.valueOf(totalQuantity));
        belowminimumtext.setText(String.valueOf(belowMinimumStock)); // New update
        outofstocktext.setText(String.valueOf(outOfStock));
        
        
        sidepanel.removeAll();
        sidepanel.add(inventorysidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(inventorypage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_inventoryoptionssidepanelbuttonActionPerformed

    private void orderrequestoptionssidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderrequestoptionssidepanelbuttonActionPerformed
        // TODO add your handling code here:
        displayOrderRequestList();
        
        sidepanel.removeAll();
        sidepanel.add(ordersidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(orderpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_orderrequestoptionssidepanelbuttonActionPerformed

    private void LogoutoptionssidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutoptionssidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Loginsidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(Loginpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_LogoutoptionssidepanelbuttonActionPerformed

    private void homeinventorysidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeinventorysidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_homeinventorysidepanelbuttonActionPerformed

    private void additeminventorysidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additeminventorysidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(addoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_additeminventorysidepanelbuttonActionPerformed

    private void removeiteminventorysidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeiteminventorysidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(removeoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_removeiteminventorysidepanelbuttonActionPerformed

    private void orderrequestinventorysidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderrequestinventorysidepanelbuttonActionPerformed
        // TODO add your handling code here:
        displayOrderRequestList();
        
        sidepanel.removeAll();
        sidepanel.add(ordersidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(orderpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_orderrequestinventorysidepanelbuttonActionPerformed

    private void Logoutinventorysidepanelbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Logoutinventorysidepanelbutton1ActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Loginsidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(Loginpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_Logoutinventorysidepanelbutton1ActionPerformed

    private void homeordersidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeordersidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_homeordersidepanelbuttonActionPerformed

    private void additemordersidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemordersidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(addoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_additemordersidepanelbuttonActionPerformed

    private void removeitemordersidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeitemordersidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(removeoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_removeitemordersidepanelbuttonActionPerformed

    private void inventoryordersidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryordersidepanelbuttonActionPerformed
        // TODO add your handling code here:
         InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
      
        inventorylist.removeAll();//whenever there is a new run of the text field it will empty.
        inventorylist.add(String.format("%-10s | %-12s | %-5s | %-5s | %-8s | %-8s%n","Item Code", "Item Name", "Qty", "MOQ", "Stk Min", "Price"));
        inventorylist.add("-----------------------------------------------------------------------------");
        
         int totalItems = 0;
        int totalQuantity = 0;
        int belowMinimumStock = 0;
        int outOfStock = 0;
        
        for(Map.Entry<String, Item> entry: inventoryMap.entrySet())
        {
            String key = entry.getKey();
            Item item = entry.getValue();
            
            String line = String.format("%-10s | %-12s | %-5d | %-5d | %-8d | %-8.2f%n", item.itemCode, item.itemName, item.qty, item.moq, item.stkMin, item.price);
            inventorylist.add(line);
            
            totalItems++;
            totalQuantity += item.qty;
            
            // Calculate items below minimum stock
            if (item.qty > 0 && item.qty < item.stkMin) {
                belowMinimumStock++;
            }
            
            // Calculate items out of stock
            if (item.qty == 0) {
                outOfStock++;
            }
          
        }
        
         totalitemstext.setText(String.valueOf(totalItems));
        totalqtytext.setText(String.valueOf(totalQuantity));
        belowminimumtext.setText(String.valueOf(belowMinimumStock)); // New update
        outofstocktext.setText(String.valueOf(outOfStock));
        
        
        sidepanel.removeAll();
        sidepanel.add(inventorysidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(inventorypage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_inventoryordersidepanelbuttonActionPerformed

    private void LogoutordersidepanelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutordersidepanelbuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(Loginsidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(Loginpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_LogoutordersidepanelbuttonActionPerformed

    private void loginloginpagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginloginpagebuttonActionPerformed
        // TODO add your handling code here:
        InventoryDBManager i = new InventoryDBManager();
        userMap = i.LoadSecurityTable();
        
        String uid = LOGINUSERIDTextField.getText();
        String password = new String(LOGINPASSWORDJPasswordField.getPassword());
        int logincounter = 0;

        try {
            if (userMap.containsKey(uid)) {
                Security user = userMap.get(uid);
                if (user.getPassword().equals(password)) {
                    JOptionPane.showMessageDialog(this, "Login successful! Welcome " + user.getUserName());

                    sidepanel.removeAll();
                    sidepanel.add(Homesidepanel);
                    sidepanel.repaint();
                    sidepanel.revalidate();

                    Parent.removeAll();
                    Parent.add(homepage);
                    Parent.repaint();
                    Parent.revalidate();
                } else {
                    JOptionPane.showMessageDialog(this, "Incorrect password.", "Login Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "User ID not found.", "Login Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Registration Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_loginloginpagebuttonActionPerformed

    private void registerregistrationpagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerregistrationpagebuttonActionPerformed
        // TODO add your handling code here:
        try {
            InventoryDBManager i = new InventoryDBManager();
            userMap = i.LoadSecurityTable(); //update hashmap with existing users
            String uid = RegisterUIDTextField.getText();
            if(userMap.containsKey(uid)){throw new Exception("Current Username Already Exists!");}
            
            String name = RegisterNameTextField.getText();
            String password = new String(RegisterPasswordField.getPassword());
            String confirmPassword = new String(RegisterPasswordConfirmField.getPassword());
            if (!confirmPassword.equals(password)) {
                throw new Exception("Password does not match.");
            }
            userMap.put(uid, new Security(name, uid, password));
            i.UpdateSecurityTable(userMap);

            RegisterNameTextField.setText("");
            RegisterUIDTextField.setText("");
            RegisterPasswordField.setText("");
            RegisterPasswordConfirmField.setText("");

            JOptionPane.showMessageDialog(this, "User registered successfully!");

            //switches back to the login panel.
            sidepanel.removeAll();
            sidepanel.add(Loginsidepanel);
            sidepanel.repaint();
            sidepanel.revalidate();

            Parent.removeAll();
            Parent.add(Loginpage);
            Parent.repaint();
            Parent.revalidate();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Registration Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_registerregistrationpagebuttonActionPerformed

    private void additemhomepagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemhomepagebuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(addoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_additemhomepagebuttonActionPerformed

    private void removeitemhomepagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeitemhomepagebuttonActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(removeoptionspage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_removeitemhomepagebuttonActionPerformed

    private void inventorystatushomepagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventorystatushomepagebuttonActionPerformed
        // TODO add your handling code here:
       InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
      
        inventorylist.removeAll();//whenever there is a new run of the text field it will empty.
        inventorylist.add(String.format("%-10s | %-12s | %-5s | %-5s | %-8s | %-8s%n","Item Code", "Item Name", "Qty", "MOQ", "Stk Min", "Price"));
        inventorylist.add("-----------------------------------------------------------------------------");
        
         int totalItems = 0;
        int totalQuantity = 0;
        int belowMinimumStock = 0;
        int outOfStock = 0;
        
        for(Map.Entry<String, Item> entry: inventoryMap.entrySet())
        {
            String key = entry.getKey();
            Item item = entry.getValue();
            
            String line = String.format("%-10s | %-12s | %-5d | %-5d | %-8d | %-8.2f%n", item.itemCode, item.itemName, item.qty, item.moq, item.stkMin, item.price);
            inventorylist.add(line);
            
            totalItems++;
            totalQuantity += item.qty;
            
            // Calculate items below minimum stock
            if (item.qty > 0 && item.qty < item.stkMin) {
                belowMinimumStock++;
            }
            
            // Calculate items out of stock
            if (item.qty == 0) {
                outOfStock++;
            }
          
        }
        
         totalitemstext.setText(String.valueOf(totalItems));
        totalqtytext.setText(String.valueOf(totalQuantity));
        belowminimumtext.setText(String.valueOf(belowMinimumStock)); // New update
        outofstocktext.setText(String.valueOf(outOfStock));
        
        sidepanel.removeAll();
        sidepanel.add(inventorysidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(inventorypage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_inventorystatushomepagebuttonActionPerformed

    private void displayOrderRequestList() {
        InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
        
        orderlist.removeAll();
        orderlist.add(String.format("%-10s | %-12s | %9s | %7s | %11s%n","Item Code", "Item Name", "Order Qty", "Price", "Total Price"));
        orderlist.add("-----------------------------------------------------------------------------");

        boolean anyOrders = false;
        
        for (Item item : inventoryMap.values()) {
            // Only include items where quantity is below the stock minimum
            if (item.qty < item.stkMin) {
                // Calculate the deficit (how many needed to reach minimum)
                int deficit = item.stkMin - item.qty;
                
                // Calculate Order Quantity, ensuring it's a multiple of MOQ
                // Formula: ceil(deficit / moq) * moq
                int orderQty = ((deficit + item.moq - 1) / item.moq) * item.moq;
                
                // Calculate total price for the order
                double totalPrice = orderQty * item.price;

                // Format the line similar to Printer.java, but use List.add()
                String line = String.format("%-10s | %-12s | %9d | %7.2f | %11.2f%n",
                        item.itemCode, item.itemName, orderQty, item.price, totalPrice);
                
                orderlist.add(line.trim()); // trim to remove trailing newline from %n

                anyOrders = true;
            }
        }
        
        if (!anyOrders) {
            orderlist.add("No items currently require an order request.");
        }
    }

    
    private void orderrequesthomepagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderrequesthomepagebuttonActionPerformed
    
        //ORDERREQUESTList.add()...
        // TODO add your handling code here:
        
        displayOrderRequestList();
        
        sidepanel.removeAll();
        sidepanel.add(ordersidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(orderpage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_orderrequesthomepagebuttonActionPerformed

    private void addqtyaddoptionspageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addqtyaddoptionspageActionPerformed
        
        InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
        
        ITEMCODEBox.removeAllItems();//clears selection box
        ITEMLISTField.removeAll();//whenever there is a new run of the text field it will empty.
        ITEMLISTField.add(String.format("%-10s | %-12s | %-5s | %-5s | %-8s | %-8s%n","Item Code", "Item Name", "Qty", "MOQ", "Stk Min", "Price"));
        ITEMLISTField.add("-----------------------------------------------------------------------------");
        for(Map.Entry<String, Item> entry: inventoryMap.entrySet())
        {
            String key = entry.getKey();
            Item item = entry.getValue();
            
            String line = String.format("%-10s | %-12s | %-5d | %-5d | %-8d | %-8.2f%n", item.itemCode, item.itemName, item.qty, item.moq, item.stkMin, item.price);
            ITEMLISTField.add(line);
            
            ITEMCODEBox.addItem(item.itemCode);
        }

        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(addqtypage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_addqtyaddoptionspageActionPerformed

    private void additemaddoptionspageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemaddoptionspageActionPerformed
        // TODO add your handling code here:
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(additempage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_additemaddoptionspageActionPerformed

    private void removeqtyremoveoptionspagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeqtyremoveoptionspagebuttonActionPerformed
        // TODO add your handling code here:
        InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
        
        removeqtycombo.removeAllItems();//clears selection box
        removeqtylist.removeAll();//whenever there is a new run of the text field it will empty.
        removeqtylist.add(String.format("%-10s | %-12s | %-5s | %-5s | %-8s | %-8s%n","Item Code", "Item Name", "Qty", "MOQ", "Stk Min", "Price"));
        removeqtylist.add("-----------------------------------------------------------------------------");
        for(Map.Entry<String, Item> entry: inventoryMap.entrySet())
        {
            String key = entry.getKey();
            Item item = entry.getValue();
            
            String line = String.format("%-10s | %-12s | %-5d | %-5d | %-8d | %-8.2f%n", item.itemCode, item.itemName, item.qty, item.moq, item.stkMin, item.price);
            removeqtylist.add(line);
            
            removeqtycombo.addItem(item.itemCode);
        }
        
        
        
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(removeqtypage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_removeqtyremoveoptionspagebuttonActionPerformed

    private void removeitemremoveoptionspagebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeitemremoveoptionspagebuttonActionPerformed
        // TODO add your handling code here:
        
        InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
        
        removeitemcombo.removeAllItems();//clears selection box
        removeitemlist.removeAll();//whenever there is a new run of the text field it will empty.
        removeitemlist.add(String.format("%-10s | %-12s | %-5s | %-5s | %-8s | %-8s%n","Item Code", "Item Name", "Qty", "MOQ", "Stk Min", "Price"));
        removeitemlist.add("-----------------------------------------------------------------------------");
        for(Map.Entry<String, Item> entry: inventoryMap.entrySet())
        {
            String key = entry.getKey();
            Item item = entry.getValue();
            
            String line = String.format("%-10s | %-12s | %-5d | %-5d | %-8d | %-8.2f%n", item.itemCode, item.itemName, item.qty, item.moq, item.stkMin, item.price);
            removeitemlist.add(line);
            
            removeitemcombo.addItem(item.itemCode);
        }
        
        
        sidepanel.removeAll();
        sidepanel.add(optionssidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(removeitempage);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_removeitemremoveoptionspagebuttonActionPerformed

    private void CREATENEWITEMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CREATENEWITEMButtonActionPerformed
        // TODO add your handling code here:
        String code = ITEMCODETextField.getText();
        String name = ITEMNAMETextField.getText();
        String supplier = SUPPLIERTextField.getText();
        Integer moq = (Integer)MOQSpinner.getValue();
        Double price = Double.parseDouble(PRICETextField.getText()); // needs to be converted to a double
        Integer min = (Integer)MINIMUMSpinner.getValue();
        
        //Item(String itemCode, String itemName, int qty, int moq, int stkMin, double price)
        inventoryMap.put(code, new Item(code,name,1, moq, min, price));
        InventoryDBManager i = new InventoryDBManager();
        i.UpdateInventoryTable(inventoryMap);
        inventoryMap = i.LoadInventoryTable();
        
        JOptionPane.showMessageDialog(this, "Item Registered Successfully!");
        
        ITEMCODETextField.setText("");
        ITEMNAMETextField.setText("");
        SUPPLIERTextField.setText("");
        MOQSpinner.setValue(0);
        PRICETextField.setText("0.00");
        MINIMUMSpinner.setValue(0);
        
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
        
    }//GEN-LAST:event_CREATENEWITEMButtonActionPerformed

    private void ITEMADDQTYButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ITEMADDQTYButtonActionPerformed
        // TODO add your handling code here:
        Integer qty = (Integer)ITEMQTYSpinner.getValue();
        String code = (String)ITEMCODEBox.getSelectedItem();
        
        boolean success = updatelist.updateItemQuantity(inventoryMap, code, qty, true);

        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully added " + qty + " to item " + code);
            // Reload and refresh the list after a successful update (not shown here, but recommended)
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add quantity.", "Update Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
        
    }//GEN-LAST:event_ITEMADDQTYButtonActionPerformed

    private void removeqtybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeqtybuttonActionPerformed
        // TODO add your handling code here:
        Integer qty =(Integer)removeqtyspinner.getValue();
        String code = (String)removeqtycombo.getSelectedItem();
        
        boolean success = updatelist.updateItemQuantity(inventoryMap, code, qty, false);

        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully removed " + qty + " from item " + code);
            // Reload and refresh the list after a successful update (not shown here, but recommended)
        } else {
            JOptionPane.showMessageDialog(this, "Failed to remove quantity.", "Update Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
        
    }//GEN-LAST:event_removeqtybuttonActionPerformed

    private void removeitembuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeitembuttonActionPerformed
        // TODO add your handling code here:
       String code = (String)removeitemcombo.getSelectedItem();
        
        if (code == null || code.isEmpty() || code.equals("Item 1")) { // Check for default placeholder if necessary
            JOptionPane.showMessageDialog(this, "Please select a valid item to remove.", "Selection Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Call the new method to remove the item
        boolean success = updatelist.removeItemFromInventory(inventoryMap, code);
        
        if (success) {
            JOptionPane.showMessageDialog(this, "Item " + code + " has been successfully removed.");
            
            // IMPORTANT: You need to manually update your UI here:
            // 1. Re-populate removeitemcombo to remove the deleted item.
            // 2. Re-populate removeitemlist to update the display.
            
        } else {
            // Error handling is delegated to the updatelist method's console output.
            JOptionPane.showMessageDialog(this, "Failed to remove item " + code + ". See console for database details.", "Removal Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
        
    }//GEN-LAST:event_removeitembuttonActionPerformed

    private void inventorydocbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventorydocbuttonActionPerformed
        // TODO add your handling code here:
        InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
        
        // 2. Call the new method in Printer to generate the document
        // Assumes InventorySystem.getInventoryFile() provides the file path
        Printer.generateInventoryStatusDocument(inventoryMap, InventorySystem.getInventoryFile());
        
        JOptionPane.showMessageDialog(this, "Inventory status document generated successfully.", "Document Created", JOptionPane.INFORMATION_MESSAGE);
        
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
        
    }//GEN-LAST:event_inventorydocbuttonActionPerformed

    private void orderbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderbuttonActionPerformed
        // TODO add your handling code here:
        InventoryDBManager i = new InventoryDBManager();
        inventoryMap = i.LoadInventoryTable();
        
        i.InsertIntoOrderRequestTable(inventoryMap);
        
        // 2. Call the new method in Printer to generate the order request document
        // Assumes InventorySystem.getOrderRequestFile() provides the file path
        Printer.generateOrderRequestDocument(inventoryMap, InventorySystem.getOrderRequestFile());
        
        JOptionPane.showMessageDialog(this, "Order Request document generated successfully.", "Document Created", JOptionPane.INFORMATION_MESSAGE);
     
        sidepanel.removeAll();
        sidepanel.add(Homesidepanel);
        sidepanel.repaint();
        sidepanel.revalidate();

        Parent.removeAll();
        Parent.add(homepage);
        Parent.repaint();
        Parent.revalidate();
        
    }//GEN-LAST:event_orderbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(maingui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(maingui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(maingui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(maingui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new maingui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton CREATENEWITEMButton;
    private javax.swing.JPanel Homesidepanel;
    private javax.swing.JToggleButton ITEMADDQTYButton;
    private javax.swing.JComboBox<String> ITEMCODEBox;
    private javax.swing.JTextField ITEMCODETextField;
    private java.awt.List ITEMLISTField;
    private javax.swing.JTextField ITEMNAMETextField;
    private javax.swing.JSpinner ITEMQTYSpinner;
    private javax.swing.JPasswordField LOGINPASSWORDJPasswordField;
    private javax.swing.JTextField LOGINUSERIDTextField;
    private javax.swing.JPanel Loginpage;
    private javax.swing.JPanel Loginsidepanel;
    private javax.swing.JToggleButton Logouthomesidepanelbutton;
    private javax.swing.JToggleButton Logoutinventorysidepanelbutton1;
    private javax.swing.JToggleButton Logoutoptionssidepanelbutton;
    private javax.swing.JToggleButton Logoutordersidepanelbutton;
    private javax.swing.JSpinner MINIMUMSpinner;
    private javax.swing.JSpinner MOQSpinner;
    private java.awt.List ORDERREQUESTList;
    private javax.swing.JTextField PRICETextField;
    private javax.swing.JPanel Parent;
    private javax.swing.JTextField RegisterNameTextField;
    private javax.swing.JPasswordField RegisterPasswordConfirmField;
    private javax.swing.JPasswordField RegisterPasswordField;
    private javax.swing.JTextField RegisterUIDTextField;
    private javax.swing.JPanel Registrationsidepanel;
    private javax.swing.JTextField SUPPLIERTextField;
    private javax.swing.JToggleButton additemaddoptionspage;
    private javax.swing.JToggleButton additemhomepagebutton;
    private javax.swing.JToggleButton additeminventorysidepanelbutton;
    private javax.swing.JToggleButton additemoptionssidepanelbutton;
    private javax.swing.JToggleButton additemordersidepanelbutton;
    private javax.swing.JPanel additempage;
    private javax.swing.JPanel addoptionspage;
    private javax.swing.JToggleButton addqtyaddoptionspage;
    private javax.swing.JPanel addqtypage;
    private javax.swing.JTextField belowminimumtext;
    private javax.swing.JToggleButton homeinventorysidepanelbutton;
    private javax.swing.JToggleButton homeoptionssidepanelbutton;
    private javax.swing.JToggleButton homeordersidepanelbutton;
    private javax.swing.JPanel homepage;
    private javax.swing.JToggleButton inventorydocbutton;
    private java.awt.List inventorylist;
    private javax.swing.JToggleButton inventoryoptionssidepanelbutton;
    private javax.swing.JToggleButton inventoryordersidepanelbutton;
    private javax.swing.JPanel inventorypage;
    private javax.swing.JPanel inventorysidepanel;
    private javax.swing.JToggleButton inventorystatushomepagebutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JToggleButton jToggleButton3;
    private java.awt.List list2;
<<<<<<< HEAD
=======
    private java.awt.List list3;
    private java.awt.List list4;
    private java.awt.List list5;
>>>>>>> b250dd633727916a365b3fe1e1f89e24dd96dfad
    private javax.swing.JToggleButton loginloginpagebutton;
    private javax.swing.JToggleButton loginsidepanelbutton1;
    private javax.swing.JPanel optionssidepanel;
    private javax.swing.JToggleButton orderbutton;
    private java.awt.List orderlist;
    private javax.swing.JPanel orderpage;
    private javax.swing.JToggleButton orderrequesthomepagebutton;
    private javax.swing.JToggleButton orderrequestinventorysidepanelbutton;
    private javax.swing.JToggleButton orderrequestoptionssidepanelbutton;
    private javax.swing.JPanel ordersidepanel;
    private javax.swing.JTextField outofstocktext;
    private javax.swing.JToggleButton registerregistrationpagebutton;
    private javax.swing.JToggleButton registersidepanelbutton;
    private javax.swing.JPanel registrationpage;
    private javax.swing.JToggleButton removeitembutton;
    private javax.swing.JComboBox<String> removeitemcombo;
    private javax.swing.JToggleButton removeitemhomepagebutton;
    private javax.swing.JToggleButton removeiteminventorysidepanelbutton;
    private java.awt.List removeitemlist;
    private javax.swing.JToggleButton removeitemoptionssidepanelbutton;
    private javax.swing.JToggleButton removeitemordersidepanelbutton;
    private javax.swing.JPanel removeitempage;
    private javax.swing.JToggleButton removeitemremoveoptionspagebutton;
    private javax.swing.JPanel removeoptionspage;
    private javax.swing.JToggleButton removeqtybutton;
    private javax.swing.JComboBox<String> removeqtycombo;
    private java.awt.List removeqtylist;
    private javax.swing.JPanel removeqtypage;
    private javax.swing.JToggleButton removeqtyremoveoptionspagebutton;
    private javax.swing.JSpinner removeqtyspinner;
    private javax.swing.JPanel sidepanel;
    private javax.swing.JTextField totalitemstext;
    private javax.swing.JTextField totalqtytext;
    // End of variables declaration//GEN-END:variables
}
